{"version":3,"sources":["components/ContactList/contactList.module.css","components/Sections/Sections.js","redux/contactAction.js","redux/contactOperations.js","redux/cnotactsSelectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","redux/contactReducer.js","redux/store.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","Sections","title","children","defaultProps","addContactRequest","createAction","addContactSuccess","addContactError","axiosContactsRequest","axiosContactsSuccess","axiosContactsError","removeContactRequest","removeContactSuccess","removeContactError","filterContact","addContact","name","number","dispatch","contactAction","console","log","axios","post","then","response","data","catch","error","axiosContacts","get","removeContact","id","delete","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","contact","toLowerCase","includes","mapDispatchToProps","onRemoveContact","contactOperations","connect","contactSelectors","map","key","type","className","style","BthDelete","onClick","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","Toast","TYPE_ERROR","TIME_NORMAL","props","onAddContact","this","contactForm","onSubmit","p_label","onChange","submit_form","Component","content","contactOperation","onChangeFilter","contactsSelector","App","onAxiosContacts","isLoadingTasks","createReducer","action","payload","combineReducers","store","configureStore","reducer","contactReducer","ReactDOM","render","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,iC,sJCE9B,SAASC,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SACtB,OACI,iCACKD,GAAS,4BAAKA,GACdC,GAKbF,EAASG,aAAe,CACpBF,MAAO,IAGID,I,IAAAA,I,wBCCA,GACXI,kBAhBsBC,YAAa,yBAiBnCC,kBAhBsBD,YAAa,yBAiBnCE,gBAhBoBF,YAAa,uBAiBjCG,qBAfyBH,YAAa,2BAgBtCI,qBAfyBJ,YAAa,2BAgBtCK,mBAfuBL,YAAa,yBAgBpCM,qBAdyBN,YAAa,4BAetCO,qBAdyBP,YAAa,4BAetCQ,mBAduBR,YAAa,0BAepCS,cAbkBT,YAAa,mB,iBCepB,GACXU,WA3Be,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAR,OAAoB,SAAAC,GAAaA,EAASC,EAAcf,qBACvEgB,QAAQC,IAAIL,EAAMC,GAElBK,IACCC,KAAK,iCAAkC,CAACP,OAAMC,WAC9CO,MAAK,SAAAC,GAAaP,EAASC,EAAcb,kBAAkBmB,EAASC,UACpEC,OAAM,SAAAC,GAAK,OAAIV,EAASC,EAAcZ,gBAAgBqB,SAsBvDC,cAnBkB,kBAAM,SAAAX,GACxBA,EAASC,EAAcX,wBAEvBc,IACCQ,IAAI,kCACJN,MAAK,gBAAEE,EAAF,EAAEA,KAAF,OAAYR,EAASC,EAAcV,qBAAqBiB,OAC7DC,OAAM,SAAAC,GAAK,OAAIV,EAASC,EAAcT,mBAAmBkB,SAc1DG,cAXkB,SAAAC,GAAE,OAAI,SAAAd,GACxBA,EAASC,EAAcR,wBAEvBW,IAAMW,OAAN,yCAA+CD,IAC9CR,MAAK,kBAAMN,EAASC,EAAcP,qBAAqBoB,OACvDL,OAAM,SAAAC,GAAK,OAAIV,EAASC,EAAcN,mBAAmBe,U,OCpBxDM,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAQ3B,GACXC,WAXe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAYvCL,YACAM,mBATuBC,YAAe,CANtB,SAAAN,GAAK,OAAIA,EAAMC,SAASM,OAMYR,IAAY,SAACE,EAAUC,GAC3E,OAAOD,EAASC,QAAO,SAAAM,GAAO,OAC1BA,EAAQ3B,KAAK4B,cAAcC,SAASR,EAAOO,sBCY7CE,EAAsB,CAC1BC,gBAAiBC,EAAkBjB,eAGtBkB,eARS,SAACd,GAAD,MAAY,CAClCC,SAAUc,EAAiBV,mBAAmBL,MAORW,EAAzBG,EApBK,SAAC,GAAD,IAAEb,EAAF,EAAEA,SAAUW,EAAZ,EAAYA,gBAAZ,OAClB,4BACGX,EAASe,KAAI,gBAAEnB,EAAF,EAAEA,GAAIhB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OAAZ,OAEZ,wBAAImC,IAAKpC,GACP,8BAAOA,EAAP,MAAgBC,GAChB,4BAAQoC,KAAK,SAASC,UAAWC,IAAMC,UAAWC,QAAS,kBAAMV,EAAgBf,KAAjF,kB,sCCDF0B,G,kNACFvB,MAAQ,CACJnB,KAAK,GACLC,OAAO,I,EAEX0C,aAAe,SAAAC,GAAM,IAAD,EAEMA,EAAEC,OAAjB7C,EAFS,EAETA,KAAM8C,EAFG,EAEHA,MACb,EAAKC,SAAL,eACK/C,EAAM8C,K,EAIfE,aAAe,SAAAJ,GACXA,EAAEK,iBAGqB,KAApB,EAAK9B,MAAMnB,MAAqC,KAAtB,EAAKmB,MAAMlB,OAEpC,IAAIiD,IAAM,kLAAuCA,IAAMC,WAAYD,IAAME,aAGzE,EAAKC,MAAMC,aAAX,eAA6B,EAAKnC,QAEtC,EAAK4B,SAAS,CAAC/C,KAAK,GAAGC,OAAO,M,uDAGxB,IAAD,EACkBsD,KAAKpC,MAArBnB,EADF,EACEA,KAAMC,EADR,EACQA,OACb,OACI,0BAAMqC,UAAWC,IAAMiB,YAAaC,SAAUF,KAAKP,cAC/C,+BACA,uBAAGV,UAAWC,IAAMmB,SAApB,QACI,2BACIpB,UAAU,aACVD,KAAK,OACLS,MAAO9C,EACP2D,SAAUJ,KAAKZ,aACf3C,KAAK,UAGb,uBAAGsC,UAAWC,IAAMmB,SAApB,UACI,2BACIpB,UAAU,eACVD,KAAK,MACLS,MAAO7C,EACP0D,SAAUJ,KAAKZ,aACf3C,KAAK,WAEb,6BACA,4BAAQqC,KAAK,SAASC,UAAWC,IAAMqB,aAAvC,oB,GAlDUC,cAiEX5B,cAAQ,MARI,SAAA/B,GAAQ,MAAK,CACpCoD,aAAc,SAAAQ,GAAO,OAAI5D,EAAS6D,EAAiBhE,WAAW+D,QAOnD7B,CAAkCS,GCxD3CZ,EAAqB,CACvBkC,eAAgB7D,EAAcL,eAGnBmC,eARS,SAACd,GAAD,MAAY,CAChC2B,MAAOmB,EAAiB/C,UAAUC,MAOEW,EAAzBG,EAnBA,SAAC,GAAD,IAAEa,EAAF,EAAEA,MAAOkB,EAAT,EAASA,eAAT,OACP,6BACI,2BACI3B,KAAK,OACLC,UAAU,mBACVQ,MAAOA,EACPa,SAAU,SAAAf,GAAC,OAAIoB,EAAepB,EAAEC,OAAOC,cCCjDoB,E,kLAGFX,KAAKF,MAAMc,oB,+BAGX,OAEE,kBAAC,EAAD,CAASlF,MAAM,aACb,kBAAC,EAAD,MACCsE,KAAKF,MAAMe,gBAAkB,gDAC9B,wCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAbUP,aAyBZ/B,EAAqB,CACzBqC,gBAAiBnC,EAAkBnB,eAIrBoB,eATQ,SAAAd,GAAK,MAAK,CAChCiD,eAAgBH,EAAiB3C,WAAWH,MAQLW,EAAzBG,CAA6CiC,G,eCnCvDxC,EAAQ2C,YAAc,IAAD,mBACtBlE,EAAcV,sBAAuB,SAAC0B,EAAOmD,GAAR,OAAmBA,EAAOC,WADzC,cAEtBpE,EAAcb,mBALI,SAAC6B,EAAOmD,GAAR,4BAAuBnD,GAAvB,CAA8BmD,EAAOC,aAGjC,cAGtBpE,EAAcP,sBALO,SAACuB,EAAOmD,GAAR,OAAmBnD,EAAME,QAAO,SAAAM,GAAO,OAAIA,EAAQX,KAAOsD,EAAOC,cAEhE,IAOrBlD,EAASgD,YAAc,GAAD,eACvBlE,EAAcL,eAAgB,SAACqB,EAAOmD,GAAR,OAAmBA,EAAOC,YAIvDhD,EAAU8C,aAAc,GAAD,mBACxBlE,EAAcX,sBAAuB,kBAAM,KADnB,cAExBW,EAAcV,sBAAuB,kBAAM,KAFnB,cAGxBU,EAAcT,oBAAqB,kBAAM,KAHjB,cAKxBS,EAAcf,mBAAoB,kBAAM,KALhB,cAMxBe,EAAcb,mBAAoB,kBAAM,KANhB,cAOxBa,EAAcZ,iBAAkB,kBAAM,KAPd,cASxBY,EAAcR,sBAAuB,kBAAM,KATnB,cAUxBQ,EAAcP,sBAAuB,kBAAM,KAVnB,cAWxBO,EAAcN,oBAAqB,kBAAM,KAXjB,IAcd2E,cAAgB,CAC3B9C,QACAL,SACAE,YCzBWkD,G,MANDC,YAAe,CACzBC,QAAS,CACLvD,SAAUwD,MCAlBC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEFM,SAASC,cAAc,W,kBCV7BlG,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,QAAU,gC","file":"static/js/main.135013ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BthDelete\":\"contactList_BthDelete__3QQmI\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Sections({title, children}){\r\n    return (\r\n        <section>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSections.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nexport default Sections;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('./contacts/addRequest');\r\nconst addContactSuccess = createAction('./contacts/addSuccess');\r\nconst addContactError = createAction('./contacts/addError');\r\n\r\nconst axiosContactsRequest = createAction('./contacts/axiosRequest');\r\nconst axiosContactsSuccess = createAction('./contacts/axiosSuccess');\r\nconst axiosContactsError = createAction('./contacts/axiosError');\r\n\r\nconst removeContactRequest = createAction('./contacts/removeRequest');\r\nconst removeContactSuccess = createAction('./contacts/removeSuccess');\r\nconst removeContactError = createAction('./contacts/removeError');\r\n\r\nconst filterContact = createAction('FILTER_CONTACT');\r\n\r\n\r\nexport default {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    axiosContactsRequest,\r\n    axiosContactsSuccess,\r\n    axiosContactsError,\r\n    removeContactRequest,\r\n    removeContactSuccess,\r\n    removeContactError, \r\n    filterContact}\r\n","import contactAction from './contactAction';\r\nimport axios from 'axios';\r\n\r\nconst addContact = ({name, number}) => dispatch =>{ dispatch(contactAction.addContactRequest());\r\n    console.log(name, number);\r\n\r\n    axios\r\n    .post('http://localhost:2000/contacts', {name, number})\r\n    .then(response => {dispatch(contactAction.addContactSuccess(response.data));})\r\n    .catch(error => dispatch(contactAction.addContactError(error)));\r\n};\r\n\r\nconst axiosContacts = () => dispatch => {\r\n    dispatch(contactAction.axiosContactsRequest());\r\n\r\n    axios\r\n    .get('http://localhost:2000/contacts')\r\n    .then(({data}) => dispatch(contactAction.axiosContactsSuccess(data)))\r\n    .catch(error => dispatch(contactAction.axiosContactsError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n    dispatch(contactAction.removeContactRequest());\r\n    \r\n    axios.delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => dispatch(contactAction.removeContactSuccess(id)))\r\n    .catch(error => dispatch(contactAction.removeContactError(error)));\r\n}\r\n\r\nexport default {\r\n    addContact,\r\n    axiosContacts,\r\n    removeContact,\r\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    });\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter, \r\n    getVisibleContacts,\r\n};","import React from 'react';\r\nimport style from'./contactList.module.css';\r\nimport {connect} from 'react-redux';\r\nimport contactOperations from '../../redux/contactOperations';\r\nimport contactSelectors from '../../redux/cnotactsSelectors';\r\n\r\nconst ContactList = ({contacts, onRemoveContact}) =>(\r\n  <ul>\r\n    {contacts.map(({id, name, number}) => \r\n    \r\n      <li key={name}>\r\n        <span>{name} : {number}</span>\r\n        <button type=\"button\" className={style.BthDelete} onClick={() => onRemoveContact(id)}>Delete</button>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getVisibleContacts(state)\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n  onRemoveContact: contactOperations.removeContact\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, {Component} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport contactOperation from '../../redux/contactOperations';\r\n\r\nimport style from'./contactForm.module.css';\r\nimport { Toast } from \"toaster-js\"\r\nimport \"toaster-js/default.css\";\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name:'',\r\n        number:'',\r\n    };\r\n    handleChange = e => {\r\n\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]:value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        \r\n        if(this.state.name === '' || this.state.number === ''){\r\n\r\n            new Toast(\"Не введено имя, или номер телефона!\", Toast.TYPE_ERROR, Toast.TIME_NORMAL);    \r\n        }\r\n        else{\r\n            this.props.onAddContact({ ...this.state });\r\n        }\r\n        this.setState({name:'',number:''});\r\n    }\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form className={style.contactForm} onSubmit={this.handleSubmit}>\r\n                <label>\r\n                <p className={style.p_label}>Name</p>\r\n                    <input \r\n                        className=\"Name-input\"\r\n                        type=\"text\"\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        name=\"name\"\r\n                    />\r\n                </label>\r\n                <p className={style.p_label}>Namber</p>\r\n                    <input \r\n                        className=\"Number-input\"\r\n                        type=\"tel\" \r\n                        value={number} \r\n                        onChange={this.handleChange}\r\n                        name=\"number\"\r\n                    />\r\n                <br/>\r\n                <button type=\"submit\" className={style.submit_form}>Add contact</button>\r\n                \r\n            </form>\r\n      )\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onAddContact: content => dispatch(contactOperation.addContact(content)),\r\n  });\r\n\r\n//   const mapDispatchToProps = ({\r\n//     onAddContact: contactOperation.addContact,\r\n//   });\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport contactAction from '../../redux/contactAction';\r\nimport contactsSelector from '../../redux/cnotactsSelectors';\r\n\r\nconst Filter = ({value, onChangeFilter}) => (\r\n        <div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"TaskEditor-input\" \r\n                value={value} \r\n                onChange={e => onChangeFilter(e.target.value)}\r\n            />\r\n        </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: contactsSelector.getFilter(state),\r\n  });\r\n\r\nconst mapDispatchToProps = {\r\n    onChangeFilter: contactAction.filterContact,\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Section from './Sections';\nimport ContactList from './ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter'\n\nimport { Toast } from \"toaster-js\"\nimport \"toaster-js/default.css\";\nimport contactOperations from '../redux/contactOperations';\nimport contactsSelector from '../redux/cnotactsSelectors';\n\nclass App extends Component {\n  // {isLoadingTasks}\n  componentDidMount(){\n    this.props.onAxiosContacts();\n  }\n  render(){\n    return (\n\n      <Section title=\"Phonebook\">\n        <ContactForm/>\n        {this.props.isLoadingTasks && <h1>LOADING STUFF...</h1>}\n        <h2>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </Section>\n\n    )\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoadingTasks: contactsSelector.getLoading(state),\n})\n\nconst mapDispatchToProps = {\n  onAxiosContacts: contactOperations.axiosContacts,\n}\n\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","import {combineReducers} from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactAction from './contactAction';\r\n\r\n    const AddContact = (state, action) => [...state, action.payload];\r\n    const removeContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\n    \r\nconst items = createReducer([],{\r\n    [contactAction.axiosContactsSuccess]: (state, action) => action.payload,\r\n    [contactAction.addContactSuccess]: AddContact,\r\n    [contactAction.removeContactSuccess]: removeContact,\r\n});\r\n\r\n\r\nconst filter = createReducer('',{\r\n    [contactAction.filterContact]: (state, action) => action.payload,\r\n\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [contactAction.axiosContactsRequest]: () => true,\r\n    [contactAction.axiosContactsSuccess]: () => false,\r\n    [contactAction.axiosContactsError]: () => false,\r\n\r\n    [contactAction.addContactRequest]: () => true,\r\n    [contactAction.addContactSuccess]: () => false,\r\n    [contactAction.addContactError]: () => false,\r\n    \r\n    [contactAction.removeContactRequest]: () => true,\r\n    [contactAction.removeContactSuccess]: () => false,\r\n    [contactAction.removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactReducer from './contactReducer';\r\nimport logger from 'redux-logger'\r\n// const defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactReducer,\r\n    },\r\n    // middleware: [...defaultMiddleware, logger],\r\n  });\r\nexport default store;\r\n\r\n//==============================store до рефакторинга кода на Redux Tookit==================================================\r\n\r\n// import { createStore, combineReducers } from 'redux';\r\n// import contactReducer from './contactReducer'\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactReducer,\r\n// });\r\n\r\n\r\n// const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),)\r\n\r\n// export default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App.js';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.querySelector(\"#root\"));\n\n\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"contactForm_contactForm__1tpOA\",\"submit_form\":\"contactForm_submit_form__pkwop\",\"p_label\":\"contactForm_p_label__c8aNS\"};"],"sourceRoot":""}